import { DataTypes, Model, ModelAttributes, Sequelize } from 'sequelize'
import { AutoGeneratedAttrs } from './utils'

export interface CharacterAttrs extends AutoGeneratedAttrs {
  nickname: string
  entityId: number
}
export type CharacterAttrsOnlyDefine = Omit<
  CharacterAttrs,
  keyof AutoGeneratedAttrs
>
export type CharacterCreateAttrs = CharacterAttrsOnlyDefine

interface CharacterModel
  extends Model<CharacterAttrs, CharacterCreateAttrs>,
    CharacterAttrs {}

export function defineCharacterModel(sequelize: Sequelize) {
  const attrs: ModelAttributes<CharacterModel, CharacterAttrsOnlyDefine> = {
    nickname: {
      type: DataTypes.STRING,
      unique: true,
    },
    entityId: DataTypes.INTEGER,
  }
  const modelCtor = class Character extends sequelize.define<
    CharacterModel,
    CharacterAttrsOnlyDefine
  >('Character', attrs) {}

  modelCtor.init(attrs as ModelAttributes<CharacterModel, CharacterAttrs>, {
    modelName: modelCtor.name,
    sequelize,
  })

  return modelCtor
}
